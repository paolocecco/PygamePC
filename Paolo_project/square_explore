import pygame
import math

#Initialise PyGame



#Blank Screen

size = (960,720)
screen = pygame.display.set_mode(size)
#Title of new window/screen
pygame.display.set_caption("Square Explore")
#Exit gae flap set to false
done = False

pygame.init()

#Global Constants

#Colours
BLACK = (0,0,0)
WHITE = (255,255,255)
BLUE = (50,50,255)
YELLOW = (255,255,0)


map_1_list=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], # =24 columns, # = 18 rows
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1]]


enemy_location_list_x = [520, 560, 520, 560]
enemy_location_list_y = [560, 560, 480, 480]





#CLASSES::::

#class Game():
 #   __init__(self):




class Player(pygame.sprite.Sprite):
    def __init__(self, skin, player_name):
        super().__init__()
        self.color = skin
        self.name = player_name
        self.image = pygame.Surface([40,40])
        self.image.fill(skin)
        self.rect = self.image.get_rect()
        self.rect.x = 10
        self.rect.y = 680
        self.speed = 0



    # def update(self):
    #     if self.rect.x > 959:
    #         self.rect.x = 959
    #     elif self.rect.x < 1:
    #         self.rect.x = 0
    #     else:
    #         self.rect.x = self.rect.x + self.speed

    #     for event in pygame.event.get():

    #         if event.type == pygame.QUIT:
    #             done = True
    #         elif event.type == pygame.KEYDOWN:
    #             if event.key == pygame.K_LEFT:
    #                 self.speed=-5
    #             elif event.key == pygame.K_RIGHT:
    #                 self.speed=5
    #         elif event.type == pygame.KEYUP:
    #             if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
    #                 self.speed = 0
    #next event


class Enemies(pygame.sprite.Sprite):
    def __init__(self, color, xpos, ypos):
        super().__init__()
        self.background = color
        self.image = pygame.Surface([40, 40])
        self.image.fill(color)
        self.rect = self.image.get_rect()
        self.rect.x = xpos
        self.rect.y = ypos




class Vertical_moving_enemies(Enemies):
    def __init__(self, color, xpos, ypos, speed, travel_ypos):
        super().__init__(color, xpos, ypos)
        self.background = color
        self.image = pygame.Surface([20, 20])
        self.image.fill(color)
        self.rect = self.image.get_rect()
        self.rect.x = xpos
        self.rect.y = ypos
        self.original_y = ypos
        self.limit_y = travel_ypos
        self.enemy_speed = speed
    

    # def update(self):
    
    #         self.rect.y += self.enemy_speed
        #while self.rect.y < 601:
        #    self.rect.y += self.enemy_speed
        



#class Lives(pygame.sprite.Sprite):
 #   __init__()


class Maps(pygame.sprite.Sprite):
    def __init__(self, color, width, height, x_ref, y_ref):
        super().__init__()
        self.image = pygame.Surface([width,height])
        self.image.fill(color)
        self.rect = self.image.get_rect()
        self.rect.x = x_ref
        self.rect.y = y_ref









#Manages how fast screen refreshes
clock = pygame.time.Clock()





#creates a group of player(s)
player_group = pygame.sprite.Group()

enemies_group = pygame.sprite.Group()



#create a list of all sprites
all_sprites_group = pygame.sprite.Group()

wall_list = pygame.sprite.Group()

#create map
# for y in range(18):
#     for x in range(24):
#         if map_1_list[y][x] == 1:
#             my_wall = Maps(YELLOW, 40, 40, x*40, y*40)
#             wall_list.add(my_wall)
#             all_sprites_group.add(my_wall)

#create player 1
player_1 = Player(BLUE, "Player 1")
player_group.add(player_1)
all_sprites_group.add(player_1)

#create still enemies
# for i in range(len(enemy_location_list_x)):
#     static_enemy = Enemies(WHITE , enemy_location_list_x[i], enemy_location_list_y[i])
#     #add enemies into sprite groups
#     enemies_group.add(static_enemy)
#     all_sprites_group.add(static_enemy)


# #create enemies which move forward
# moving_enemy = Vertical_moving_enemies(YELLOW, 600, 600, 1, 550)
# enemies_group.add(moving_enemy)
# all_sprites_group.add(moving_enemy)


#create collision list
# player_hit_list = pygame.sprite.spritecollide(Player, map_1_list, False)
# for foo in player_hit_list:
#     player_1.player_speed_update(0,0)
#     player_1.rect.x = player_1_old_x
#     player_1.rect.y = player_1_old_y
# player_1_old_x = player_1.rect.x
# player_1_old_y = player_1.rect.y    



### GAME LOOP

while not done:

    #user input and controls

  
  
  
  
    for event in pygame.event.get():


        if event.type == pygame.QUIT:
            done = True
        #endif
    #next event
    
    #Game logic goes after this comment






    #screen background is BLACK
    screen.fill (BLACK)
    
    all_sprites_group.update()
    all_sprites_group.draw (screen)    
    #draw here

    #flip display to reveal new postion of objects (refreshes screen)
    pygame.display.flip()
    #clock ticks over
    clock.tick(60)

#endwhile - End of game loop

pygame.quit